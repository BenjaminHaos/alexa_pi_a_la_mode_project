# Install cec-utils
sudo apt-get -y install cec-utils # https://timleland.com/raspberry-pi-turn-tv-onoff-cec/

# Test install and show available commands
echo h | cec-client -s -d 1 # https://raspberrypi.stackexchange.com/questions/9142/commands-for-using-cec-client

# Show active devices
echo lad | cec-client -s -d 1

echo lad | cec-client -s -d 1
echo as | cec-client -s -d 1
echo is | cec-client -s -d 1

echo sp 4| cec-client -s -d 1


pi@raspberrypi:~ $ echo name 0 | cec-client -s -d 1
opening a connection to the CEC adapter...
OSD name of device 0 is 'TV'
pi@raspberrypi:~ $ echo name 1 | cec-client -s -d 1
opening a connection to the CEC adapter...
OSD name of device 1 is 'CECTester'
pi@raspberrypi:~ $ echo name 4 | cec-client -s -d 1
opening a connection to the CEC adapter...
OSD name of device 4 is 'Amazon FireTV'
pi@raspberrypi:~ $ echo name 5 | cec-client -s -d 1
opening a connection to the CEC adapter...
OSD name of device 5 is 'AV AMP'
pi@raspberrypi:~ $ echo name 8 | cec-client -s -d 1
opening a connection to the CEC adapter...
OSD name of device 8 is 'Chromecast'

# Allow Command Line to Open Windows on Remote Machine
# https://askubuntu.com/questions/405916/open-a-window-in-a-remote-machine
export DISPLAY=:0 

# Opens Chromium Browser in Kiosk Mode (Full Screen, no exit)
chromium-browser --kiosk http://haos.info/

# Kill all instances of Google Chromium in Linux from command line
pkill chromium
# Source https://www.garron.me/en/bits/kill-all-instances-chromium-linux-command-line.html


# Shut down pi from command line
sudo poweroff
# Source https://www.google.com/search?q=ubuntu+shutdown&oq=ubuntu+shutdown&aqs=chrome..69i57j0l5.3071j0j8&sourceid=chrome&ie=UTF-8

sudo killall -u pi -m .

echo as | cec-client -s -d 1


echo on 0 | cec-client -s -d 1
echo on 1 | cec-client -s -d 1
echo on 4 | cec-client -s -d 1
echo on 5 | cec-client -s -d 1

echo standby 0 | cec-client -s -d 1
echo standby 1 | cec-client -s -d 1
echo standby 4 | cec-client -s -d 1
echo standby 5 | cec-client -s -d 1

echo pow 0 | cec-client -s -d 1
echo pow 1 | cec-client -s -d 1
echo pow 4 | cec-client -s -d 1
echo pow 5 | cec-client -s -d 1
echo pow 8 | cec-client -s -d 1

echo standby 0 | cec-client -s -d 1
echo standby 4 | cec-client -s -d 1
echo standby 5 | cec-client -s -d 1
echo standby 8 | cec-client -s -d 1

echo self | cec-client -s -d 1

echo scan | cec-client -s -d 2

echo on 0 | cec-client -s -d 1

echo q | cec-client -s -d 1

echo mon 1 | cec-client -s -d 1


echo "on 0" | cec-client RPI -s -d 1
echo "standby 0" | cec-client RPI -s -d 1
echo "standby 0" | cec-client RPI -s -d 1



echo "standby 0" | cec-client RPI -s -d 20

echo "standby 0" | cec-client RPI -s -d 30

echo "standby 0" | cec-client RPI -s -d 20

-----------------------------------------------------------------------

Turn Television On
echo "tx 10:04" | cec-client RPI -s -d 4

echo "tx  0f:36" | cec-client RPI -s -d 4


-----------------------------------------------------------------------

device #0: TV
address:       0.0.0.0
active source: no
vendor:        Samsung
osd string:    TV
CEC version:   1.4
power status:  in transition from standby to on
language:      eng


device #1: Recorder 1
address:       3.0.0.0
active source: no
vendor:        Pulse Eight
osd string:    CECTester
CEC version:   1.4
power status:  on
language:      eng


device #4: Playback 1
address:       2.0.0.0
active source: no
vendor:        Toshiba
osd string:    Amazon FireTV
CEC version:   1.4
power status:  on
language:      ???


device #5: Audio
address:       1.0.0.0
active source: no
vendor:        Sony
osd string:    AV AMP
CEC version:   1.4
power status:  standby
language:      ???


device #8: Playback 2
address:       1.3.0.0
active source: no
vendor:        Google
osd string:    Chromecast
CEC version:   1.4
power status:  on
language:      ???

-----------------------------------------------------------------------





echo "standby 0" | cec-client RPI -s -d 2
echo "standby 0" | cec-client RPI -s -d 3
echo "standby 0" | cec-client RPI -s -d 4

echo "on 0" | cec-client RPI -s -d 100
echo "on 0" | cec-client RPI -s -d 2
echo "on 0" | cec-client RPI -s -d 3
echo "on 0" | cec-client RPI -s -d 4


source : device #1: Recorder 1
source address: 3.0.0.0


echo "tx 1F:82:20:00" | cec-client RPI -s -d 1

Turn Televison On
echo "10:04" | cec-client RPI -s -d 100

Turn Televison Off
echo "00:36" | cec-client RPI -s --log-level 99

echo "0F:36" | cec-client RPI -s --log-level 9

echo "4F:44:60" | cec-client RPI -s -d 4



Available commands:

[tx] {bytes}              transfer bytes over the CEC line.
[txn] {bytes}             transfer bytes but don't wait for transmission ACK.
[on] {address}            power on the device with the given logical address.
[standby] {address}       put the device with the given address in standby mode.
[la] {logical address}    change the logical address of the CEC adapter.
[p] {device} {port}       change the HDMI port number of the CEC adapter.
[pa] {physical address}   change the physical address of the CEC adapter.
[as]                      make the CEC adapter the active source.
[is]                      mark the CEC adapter as inactive source.
[osd] {addr} {string}     set OSD message on the specified device.
[ver] {addr}              get the CEC version of the specified device.
[ven] {addr}              get the vendor ID of the specified device.
[lang] {addr}             get the menu language of the specified device.
[pow] {addr}              get the power status of the specified device.
[name] {addr}             get the OSD name of the specified device.
[poll] {addr}             poll the specified device.
[lad]                     lists active devices on the bus
[ad] {addr}               checks whether the specified device is active.
[at] {type}               checks whether the specified device type is active.
[sp] {addr}               makes the specified physical address active.
[spl] {addr}              makes the specified logical address active.
[volup]                   send a volume up command to the amp if present
[voldown]                 send a volume down command to the amp if present
[mute]                    send a mute/unmute command to the amp if present
[self]                    show the list of addresses controlled by libCEC
[scan]                    scan the CEC bus and display device info
[mon] {1|0}               enable or disable CEC bus monitoring.
[log] {1 - 31}            change the log level. see cectypes.h for values.
[ping]                    send a ping command to the CEC adapter.
[bl]                      to let the adapter enter the bootloader, to upgrade
                          the flash rom.
[r]                       reconnect to the CEC adapter.
[h] or [help]             show this help.
[q] or [quit]             to quit the CEC test client and switch off all
                          connected CEC devices.
